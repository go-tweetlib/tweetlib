package tweetlib

import (
	"bytes"
	"fmt"
)

// Represents an error generated when attempting to gain/invalidate an
// application-only oauth token
type ApplicationOAuthError struct {
	errorString string
}

func (e *ApplicationOAuthError) Error() string {
	return e.errorString
}

func NoBearerTokenError() *ApplicationOAuthError {
	return &ApplicationOAuthError{"No bearer token was attached with your token response"}
}

// TwitterError represents an error generated by
// the Twitter API
type TwitterError struct {
	Message string `json:message` // Error message
	Code    int    `json:code`    // Error code
}

// TwitterErrorReply: contains a list of errors returned
// for a request to the Twitter API
type TwitterErrorReply struct {
	Errors []TwitterError `json:errors`
}

// Twitter error responses can actually contain
// multiple errors. This function preps them
// for a nice display
func (ter *TwitterErrorReply) String() string {
	buf := bytes.NewBufferString("")
	for i := range ter.Errors {
		fmt.Fprintf(buf, "%s (%d)\n", ter.Errors[i].Message, ter.Errors[i].Code)
	}
	return buf.String()
}
